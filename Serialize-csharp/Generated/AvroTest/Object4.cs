// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace AvroTest
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class Object4 : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse("{\"type\":\"record\",\"name\":\"Object4\",\"namespace\":\"AvroTest\",\"fields\":[{\"name\":\"float" +
				"Val\",\"type\":\"float\"},{\"name\":\"someInteger\",\"type\":\"int\"},{\"name\":\"someLong\",\"typ" +
				"e\":\"long\"},{\"name\":\"optionalInt\",\"default\":0,\"type\":\"int\"}]}");
		private float _floatVal;
		private int _someInteger;
		private long _someLong;
		private int _optionalInt;
		public virtual Schema Schema
		{
			get
			{
				return Object4._SCHEMA;
			}
		}
		public float floatVal
		{
			get
			{
				return this._floatVal;
			}
			set
			{
				this._floatVal = value;
			}
		}
		public int someInteger
		{
			get
			{
				return this._someInteger;
			}
			set
			{
				this._someInteger = value;
			}
		}
		public long someLong
		{
			get
			{
				return this._someLong;
			}
			set
			{
				this._someLong = value;
			}
		}
		public int optionalInt
		{
			get
			{
				return this._optionalInt;
			}
			set
			{
				this._optionalInt = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.floatVal;
			case 1: return this.someInteger;
			case 2: return this.someLong;
			case 3: return this.optionalInt;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.floatVal = (System.Single)fieldValue; break;
			case 1: this.someInteger = (System.Int32)fieldValue; break;
			case 2: this.someLong = (System.Int64)fieldValue; break;
			case 3: this.optionalInt = (System.Int32)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
